--- 
frameworkVersion: ">=1.28.0 <2.0.0"
custom:
  slacktoken: ${ssm:/slack/access-token~false}
functions: 
  prospectbot:
    handler: cmd/prospectbot
    onError: "arn:aws:sns:us-east-1:368529172044:BFCapital_Support"
    name: prospectbot-dev-${env:CI_COMMIT_SHORT_SHA}
    environment:
      SLACK_CHANNEL: CPEN4FNM6
      SLACK_TOKEN: ${self:custom.slacktoken}
      SYSTEM_TABLE: prospectbot
      MINER_TABLE: miners
    iamRoleStatements:
      - Effect: Allow
        Action:
          - kms:Decrypt
        Resource:
          - "arn:aws:kms:us-east-1:368529172044:key/18b77503-d51f-463d-96a3-d8016faba69c"
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:ListTables
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:Scan
        Resource: "*"
      - Effect: Allow
        Action:
          - sqs:SendMessage
        Resource:
          - "arn:aws:sqs:us-east-1:368529172044:prospectbot-errors.fifo"
    events:
      - schedule:
          rate: rate(10 minutes)
          enabled: true
          name: run-prospectbot-${env:CI_COMMIT_SHORT_SHA}
          description: Checks Github for new software releases
package:
  exclude:
    - node_modules/**
    - package.json
    - package-lock.json
  include:
    - ../cmd/prospectbot
provider: 
  deploymentBucket: 
    name: prospectbot-dev-artifacts
    serverSideEncryption: aws:kms
    sseKMSKeyId: arn:aws:kms:us-east-1:368529172044:key/18b77503-d51f-463d-96a3-d8016faba69c
  deploymentPrefix: prospectbot
  memorySize: 128
  name: aws
  region: ${opt:region, 'us-east-1'}
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  timeout: 180
  versionFunctions: false
  vpc: 
    securityGroupIds: 
      - sg-0fe322ae8afec85d8
    subnetIds: 
      - subnet-082f045cc74d41341
      - subnet-08f8c3e3ec4a818ef
      - subnet-0e416060c5df577e2
      - subnet-014f6a1ef62467747
      - subnet-054786e6b88490645
      - subnet-09d64791da9820617
service: prospectbot-${env:CI_COMMIT_SHORT_SHA}
plugins:
  - serverless-iam-roles-per-function
